name: Build and release
on: push

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest

      - name: Build edge version
        id: build_edge_version
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        env:
          DOCKER_USERNAME: 'boky'
          DOCKER_PASSWORD: '${{ secrets.DOCKER_ACCESS_TOKEN }}'
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled
          PLATFORMS: "linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le"
        run: ./build-docker.sh -t boky/socketace:edge --push --build-arg "GORELEASER_EXTRA_ARGS=--snapshot"

      - name: Extract tag names
        id: extract_tag_names
        if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'
        shell: bash
        run: ./get-docker-tags.sh

      - name: Build tagged version
        id: build_tagged_version
        if: env.DO_BUILD_TAG == '1'
        env:
          DOCKER_USERNAME: 'boky'
          DOCKER_PASSWORD: '${{ secrets.DOCKER_ACCESS_TOKEN }}'
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled
          PLATFORMS: "linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le"
        run: ./build-docker.sh $TAGS --push

  artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup environment variables
        id: setup_environment
        shell: bash
        run: |
          echo "::set-env name=GOVERSION::$(go version)"
          echo "::set-env name=GIT_BRANCH::$(git symbolic-ref --short HEAD 2>/dev/null || echo '')"

      - name: Setup Go
        id: setup_go
        uses: actions/setup-go@v2
        with:
          go-version: "1.15"

      - name: Prepare compilation for linux/amd64 only
        id: update_goreleaser_yml
        if: github.ref == 'refs/heads/master'
        shell: bash
        run: |
          sed -i -e "s/^    goos:.*\$/    goos: [ 'linux' ]/" .goreleaser.yml
          sed -i -e "s/^    goarch:.*\$/    goarch: [ 'amd64' ]/" .goreleaser.yml
          sed -i -e "s/^    goarm:.*\$/    goarm: []/" .goreleaser.yml

      - name: Compile the source
        id: compile
        if: github.ref == 'refs/heads/master'
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: build --rm-dist --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release a new version
        id: compile_and_release
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --parallelism 10
        env:
          HOMEBREW_TAP_GITHUB_TOKEN: '${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
